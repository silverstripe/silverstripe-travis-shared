language: php

os: linux

dist: xenial

# Always install services for postgres + behat because "services"
# does not "merge" correctly so this cannot be dynamic
services:
  - mysql
  - postgresql
  - xvfb

# TODO: try removing DISPLAY + XVFBARGS and see if behat still functions
env:
  global:
    - SS_ENVIRONMENT_TYPE=dev
    - SS_BASE_URL="http://localhost:8080/"
    - DISPLAY=":99"
    - XVFBARGS=":99 -ac -screen 0 1024x768x16"

cache:
  directories:
    - $HOME/.composer/cache/files

addons:
  apt:
    packages:
      - tidy
      - chromium-chromedriver
      - chromium-browser

before_script:
  # BEHAT
  # Remove preinstalled Chrome (google-chrome)
  # this would conflict with our chromium-browser installation
  # and its version is incompatible with chromium-chromedriver
  - if [[ $BEHAT_TEST ]]; then sudo apt-get remove -y --purge google-chrome-stable || true; fi

  # COMPOSER
  # install $COMPOSER_VERSION if defined, otherwise use Composer v1 with PHP <= 7.3, Composer v2 for >= 7.3
  - if [ $COMPOSER_VERSION ]; then composer self-update "$COMPOSER_VERSION"; elif [ $(php -r 'echo (int) version_compare(phpversion(), "7.3.0", "<=");') = "1" ]; then composer self-update 1.9.3; else composer self-update; fi
  - composer --version
  - composer validate
  - if [[ $DB == PGSQL && $(php -r 'echo json_decode(file_get_contents("composer.json"))->name;') != "silverstripe/postgresql" ]]; then composer require --no-update silverstripe/postgresql:^2 --no-update --prefer-dist; fi
  - if [[ $BEHAT_TEST ]]; then composer require --no-update silverstripe/behat-extension:^4 silverstripe/serve:^2  --prefer-dist; fi;
  - if [[ $REQUIRE_RECIPE_CORE ]]; then composer require silverstripe/recipe-core="$REQUIRE_RECIPE_CORE" --no-update --prefer-dist; fi
  - if [[ $REQUIRE_CWP_CWP_RECIPE_CMS ]]; then composer require cwp/cwp-recipe-cms="$REQUIRE_CWP_CWP_RECIPE_CMS" --no-update --prefer-dist; fi
  - if [[ $REQUIRE_INSTALLER ]]; then composer require silverstripe/installer="$REQUIRE_INSTALLER" --no-update --prefer-dist; fi
  - if [[ $REQUIRE_RECIPE_TESTING ]]; then composer require silverstripe/recipe-testing="$REQUIRE_RECIPE_TESTING" --dev --no-update --prefer-dist; fi
  - if [[ $REQUIRE_FRAMEWORKTEST ]]; then composer require silverstripe/frameworktest="$REQUIRE_FRAMEWORKTEST" --dev --no-update --prefer-dist; fi
  - if [[ $REQUIRE_CWP_STARTER_THEME ]]; then composer require cwp/starter-theme="$REQUIRE_CWP_STARTER_THEME" --no-update --prefer-dist; fi
  # $REQUIRE_GRAPHQL needs to happen BEFORE $REQUIRE_EXTRA so that graphql 4 is more likely to install to increase
  # our level of test coverage.  This may lead to the installation of previous requirements that use graphql that did
  # not set a graphql contraint and were not graphql 4 compatible such as elemental 4.4.1 - in this scenario set
  # REQUIRE_EXTRA elemental to 4.x-dev or a stable version of elemental ^4.6 once that has been released
  - if [[ $REQUIRE_GRAPHQL ]]; then composer require silverstripe/graphql="$REQUIRE_GRAPHQL" --no-update --prefer-dist; fi
  - if [[ $REQUIRE_EXTRA ]] ; then composer require --no-update "$REQUIRE_EXTRA"; fi
  - if [[ $COW_TEST && -f .cow.json ]]; then composer require --no-update silverstripe/cow dev-master "$COMPOSER_INSTALL_ARG"; fi

  - composer update --prefer-source --no-interaction --no-progress --no-suggest --optimize-autoloader --verbose --profile "$COMPOSER_INSTALL_ARG"
  - composer show

  # PHPENV
  - phpenv rehash
  - phpenv config-rm xdebug.ini || true
  - if [[ $PHPUNIT_COVERAGE_TEST ]]; then memlimit='8192M'; else memlimit='4096M'; fi
  - echo "memory_limit = ${memlimit}" >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini
  - echo 'always_populate_raw_post_data = -1' >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini

  # NPM
  # This needs to happen after composer update
  - if [[ -d vendor/silverstripe/admin ]]; then admin_installed=1; else admin_installed=0; fi
  - if [[ $NPM_TEST ]]; then rm -rf client/dist; fi
  - if [[ $NPM_TEST ]]; then nvm install; fi
  - if [[ $NPM_TEST ]]; then nvm use; fi
  - if [[ $NPM_TEST ]]; then npm install -g yarn; fi
  - if [[ $NPM_TEST ]]; then yarn install --network-concurrency 1; fi
  - if [[ $NPM_TEST && $admin_installed == 1 ]]; then cd vendor/silverstripe/admin; fi
  - if [[ $NPM_TEST && $admin_installed == 1 ]]; then yarn install --network-concurrency 1; fi
  - if [[ $NPM_TEST && $admin_installed == 1 ]]; then cd ../../..; fi
  - if [[ $NPM_TEST ]]; then yarn run build; fi

  # Start behat services
  # This needs to happen after composer update
  - if [[ -d vendor/silverstripe/cms ]]; then cms_installed=1; else cms_installed=0; fi
  - if [[ $BEHAT_TEST ]]; then mkdir artifacts; fi
  - if [[ $BEHAT_TEST ]]; then cp composer.json artifacts/; fi
  - if [[ $BEHAT_TEST ]]; then cp composer.lock artifacts/; fi
  - if [[ $BEHAT_TEST ]]; then sh -e /etc/init.d/xvfb start; sleep 3; fi
  - if [[ $BEHAT_TEST ]]; then (chromedriver > artifacts/chromedriver.log 2>&1 &); fi
  - if [[ $BEHAT_TEST && $cms_installed == 1 ]]; then (vendor/bin/serve --bootstrap-file vendor/silverstripe/cms/tests/behat/serve-bootstrap.php &> artifacts/serve.log &); fi
  # The following line is used for testing the cms module itself
  - if [[ $BEHAT_TEST && $cms_installed == 0 ]]; then (vendor/bin/serve --bootstrap-file tests/behat/serve-bootstrap.php &> artifacts/serve.log &); fi

  # Validate cow schema
  - if [[ $COW_TEST && -f .cow.json ]]; then vendor/bin/cow schema:validate; fi

script:
  # PHPUNIT
  - if [[ "$PHPUNIT_TEST" != "" && "$PHPUNIT_SUITE" == "" ]]; then vendor/bin/phpunit; fi
  - if [[ "$PHPUNIT_TEST" != "" && "$PHPUNIT_SUITE" != "" ]]; then vendor/bin/phpunit --testsuite $PHPUNIT_SUITE; fi

  # PHPUNIT_COVERAGE
  - if [[ "$PHPUNIT_COVERAGE_TEST" != "" && "$PHPUNIT_COVERAGE_SUITE" == "" ]]; then phpdbg -qrr vendor/bin/phpunit --coverage-clover=coverage.xml; fi
  - if [[ "$PHPUNIT_COVERAGE_TEST" != "" && "$PHPUNIT_COVERAGE_SUITE" != "" ]]; then phpdbg -qrr vendor/bin/phpunit --testsuite $PHPUNIT_COVERAGE_SUITE --coverage-clover=coverage.xml; fi

  # BEHAT
  - if [[ $BEHAT_TEST ]]; then vendor/bin/behat $BEHAT_SUITE; fi

  # PHPCS
  - if [[ $PHPCS_TEST && -f phpcs.xml.dist ]]; then vendor/bin/phpcs; fi

  # NPM
  - if [[ $NPM_TEST ]]; then git diff-files --quiet -w --relative=client; fi
  - if [[ $NPM_TEST ]]; then git diff --name-status --relative=client; fi
  - if [[ $NPM_TEST ]]; then yarn run test; fi
  - if [[ $NPM_TEST ]]; then yarn run lint; fi

after_success:
  # PHPUNIT
  - if [[ $PHPUNIT_COVERAGE_TEST ]]; then bash <(curl -s https://codecov.io/bash) -f coverage.xml; fi  

after_failure:
  # BEHAT
  - if [[ $BEHAT_TEST ]]; then php ./vendor/silverstripe/framework/tests/behat/travis-upload-artifacts.php --if-env BEHAT_TEST,ARTIFACTS_BUCKET,ARTIFACTS_KEY,ARTIFACTS_SECRET --target-path $TRAVIS_REPO_SLUG/$TRAVIS_BUILD_ID/$TRAVIS_JOB_ID --artifacts-base-url https://s3.amazonaws.com/$ARTIFACTS_BUCKET/ --artifacts-path ./artifacts/; fi
